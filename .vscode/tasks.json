{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Run Create Python Project",
            "type": "shell",
            "command": "poetry run python -m create_python_project.create_python_project",
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Install Dependencies",
            "type": "shell",
            "command": "poetry install",
            "problemMatcher": []
        },
        {
            "label": "Install Development Dependencies",
            "type": "shell",
            "command": "poetry install --with dev",
            "problemMatcher": []
        },
        {
            "label": "Format Code with Black",
            "type": "shell",
            "command": "poetry run black ${workspaceFolder}/src/create_python_project",
            "problemMatcher": []
        },
        {
            "label": "Run Linting",
            "type": "shell",
            "command": "poetry run pylint ${workspaceFolder}/src/create_python_project",
            "problemMatcher": []
        },
        {
            "label": "Run Type Checking",
            "type": "shell",
            "command": "poetry run mypy --config-file=${workspaceFolder}/.config/mypy.ini ${workspaceFolder}/src/create_python_project",
            "problemMatcher": []
        },
        {
            "label": "Setup Poetry Environment",
            "type": "shell",
            "command": "poetry install",
            "problemMatcher": []
        },
        {
            "label": "Run Secret Detection",
            "type": "shell",
            "command": "poetry run detect-secrets scan --all-files",
            "problemMatcher": []
        },
        {
            "label": "Run Tests with Coverage",
            "type": "shell",
            "command": "poetry run pytest --cov=create_python_project tests/",
            "problemMatcher": [],
            "group": "test"
        },
        {
            "label": "Generate Documentation",
            "type": "shell",
            "command": "poetry run pdoc --html --output-dir docs/ create_python_project/",
            "problemMatcher": [],
            "group": "build"
        },
        {
            "label": "Build Package",
            "type": "shell",
            "command": "poetry build",
            "problemMatcher": [],
            "group": "build"
        },
        {
            "label": "Run Pre-commit",
            "type": "shell",
            "command": "pre-commit run --all-files",
            "problemMatcher": []
        }
    ]
}